# Makefile.in generated by automake 1.7.9 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
NM = @NM@
NMEDIT = @NMEDIT@
NO_PREFIX_PACKAGE_DATA_DIR = @NO_PREFIX_PACKAGE_DATA_DIR@
NO_PREFIX_PACKAGE_DOC_DIR = @NO_PREFIX_PACKAGE_DOC_DIR@
NO_PREFIX_PACKAGE_PIXMAPS_DIR = @NO_PREFIX_PACKAGE_PIXMAPS_DIR@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_DATA_DIR = @PACKAGE_DATA_DIR@
PACKAGE_DOC_DIR = @PACKAGE_DOC_DIR@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_PIXMAPS_DIR = @PACKAGE_PIXMAPS_DIR@
PACKAGE_SOURCE_DIR = @PACKAGE_SOURCE_DIR@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
INCLUDES = 

AM_CXXFLAGS = \
	 -Wall


lib_LTLIBRARIES = libfizzix.la

libfizzix_la_SOURCES = \
	fizformula.cpp \
	fizformvariable.cpp \
	fizobject.cpp \
	quaternion.cpp \
	fizformanonconst.cpp \
	gen_structs.cpp \
	fizformoperators/arccos.cpp \
	fizformoperators/arctan.cpp \
	fizformoperators/cosine.cpp \
	fizformoperators/difference.cpp \
	fizformoperators/exponent.cpp   \
	fizformoperators/factorial.cpp \
	fizformoperators/magnitude.cpp \
	pfizformoperators/roduct.cpp \
	fizformoperators/random.cpp \
	fizformoperators/sinh.cpp  \
	fizformoperators/sum.cpp   \
	fizformoperators/tanh.cpp   \
	fizformoperators/vectorize.cpp \
	fizformoperators/arcsin.cpp \
	fizformoperators/cosh.cpp  \
	fizformoperators/cross.cpp  \
	fizformoperators/dot.cpp    \
	fizformoperators/exponentiate.cpp \
	fizformoperators/logarithm.cpp \
	fizformoperators/quotient.cpp \
	fizformoperators/sine.cpp  \
	fizformoperators/square.cpp \
	fizformoperators/tangent.cpp \
	fizformoperators/template.cpp


libfizzix_la_LDFLAGS = 

libfizzix_la_LIBADD = 
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libfizzix_la_DEPENDENCIES =
am_libfizzix_la_OBJECTS = fizformula.lo fizformvariable.lo fizobject.lo \
	quaternion.lo fizformanonconst.lo gen_structs.lo arccos.lo \
	arctan.lo cosine.lo difference.lo exponent.lo factorial.lo \
	magnitude.lo roduct.lo random.lo sinh.lo sum.lo tanh.lo \
	vectorize.lo arcsin.lo cosh.lo cross.lo dot.lo exponentiate.lo \
	logarithm.lo quotient.lo sine.lo square.lo tangent.lo \
	template.lo
libfizzix_la_OBJECTS = $(am_libfizzix_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/arccos.Plo ./$(DEPDIR)/arcsin.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/arctan.Plo ./$(DEPDIR)/cosh.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/cosine.Plo ./$(DEPDIR)/cross.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/difference.Plo ./$(DEPDIR)/dot.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/exponent.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/exponentiate.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/factorial.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fizformanonconst.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fizformula.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fizformvariable.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fizobject.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gen_structs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/logarithm.Plo ./$(DEPDIR)/magnitude.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/quaternion.Plo ./$(DEPDIR)/quotient.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/random.Plo ./$(DEPDIR)/roduct.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/sine.Plo ./$(DEPDIR)/sinh.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/square.Plo ./$(DEPDIR)/sum.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/tangent.Plo ./$(DEPDIR)/tanh.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/template.Plo ./$(DEPDIR)/vectorize.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libfizzix_la_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(libfizzix_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfizzix.la: $(libfizzix_la_OBJECTS) $(libfizzix_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libfizzix_la_LDFLAGS) $(libfizzix_la_OBJECTS) $(libfizzix_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arccos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arcsin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arctan.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cosh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cosine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cross.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/difference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dot.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exponent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exponentiate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/factorial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fizformanonconst.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fizformula.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fizformvariable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fizobject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gen_structs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logarithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/magnitude.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quaternion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quotient.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/roduct.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sinh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/square.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tangent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tanh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/template.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vectorize.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

arccos.o: fizformoperators/arccos.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arccos.o -MD -MP -MF "$(DEPDIR)/arccos.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arccos.o `test -f 'fizformoperators/arccos.cpp' || echo '$(srcdir)/'`fizformoperators/arccos.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arccos.Tpo" "$(DEPDIR)/arccos.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arccos.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arccos.cpp' object='arccos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arccos.Po' tmpdepfile='$(DEPDIR)/arccos.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arccos.o `test -f 'fizformoperators/arccos.cpp' || echo '$(srcdir)/'`fizformoperators/arccos.cpp

arccos.obj: fizformoperators/arccos.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arccos.obj -MD -MP -MF "$(DEPDIR)/arccos.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arccos.obj `if test -f 'fizformoperators/arccos.cpp'; then $(CYGPATH_W) 'fizformoperators/arccos.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/arccos.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arccos.Tpo" "$(DEPDIR)/arccos.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arccos.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arccos.cpp' object='arccos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arccos.Po' tmpdepfile='$(DEPDIR)/arccos.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arccos.obj `if test -f 'fizformoperators/arccos.cpp'; then $(CYGPATH_W) 'fizformoperators/arccos.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/arccos.cpp'; fi`

arccos.lo: fizformoperators/arccos.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arccos.lo -MD -MP -MF "$(DEPDIR)/arccos.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arccos.lo `test -f 'fizformoperators/arccos.cpp' || echo '$(srcdir)/'`fizformoperators/arccos.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arccos.Tpo" "$(DEPDIR)/arccos.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arccos.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arccos.cpp' object='arccos.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arccos.Plo' tmpdepfile='$(DEPDIR)/arccos.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arccos.lo `test -f 'fizformoperators/arccos.cpp' || echo '$(srcdir)/'`fizformoperators/arccos.cpp

arctan.o: fizformoperators/arctan.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arctan.o -MD -MP -MF "$(DEPDIR)/arctan.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arctan.o `test -f 'fizformoperators/arctan.cpp' || echo '$(srcdir)/'`fizformoperators/arctan.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arctan.Tpo" "$(DEPDIR)/arctan.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arctan.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arctan.cpp' object='arctan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arctan.Po' tmpdepfile='$(DEPDIR)/arctan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arctan.o `test -f 'fizformoperators/arctan.cpp' || echo '$(srcdir)/'`fizformoperators/arctan.cpp

arctan.obj: fizformoperators/arctan.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arctan.obj -MD -MP -MF "$(DEPDIR)/arctan.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arctan.obj `if test -f 'fizformoperators/arctan.cpp'; then $(CYGPATH_W) 'fizformoperators/arctan.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/arctan.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arctan.Tpo" "$(DEPDIR)/arctan.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arctan.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arctan.cpp' object='arctan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arctan.Po' tmpdepfile='$(DEPDIR)/arctan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arctan.obj `if test -f 'fizformoperators/arctan.cpp'; then $(CYGPATH_W) 'fizformoperators/arctan.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/arctan.cpp'; fi`

arctan.lo: fizformoperators/arctan.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arctan.lo -MD -MP -MF "$(DEPDIR)/arctan.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arctan.lo `test -f 'fizformoperators/arctan.cpp' || echo '$(srcdir)/'`fizformoperators/arctan.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arctan.Tpo" "$(DEPDIR)/arctan.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arctan.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arctan.cpp' object='arctan.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arctan.Plo' tmpdepfile='$(DEPDIR)/arctan.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arctan.lo `test -f 'fizformoperators/arctan.cpp' || echo '$(srcdir)/'`fizformoperators/arctan.cpp

cosine.o: fizformoperators/cosine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cosine.o -MD -MP -MF "$(DEPDIR)/cosine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cosine.o `test -f 'fizformoperators/cosine.cpp' || echo '$(srcdir)/'`fizformoperators/cosine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cosine.Tpo" "$(DEPDIR)/cosine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cosine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cosine.cpp' object='cosine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cosine.Po' tmpdepfile='$(DEPDIR)/cosine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cosine.o `test -f 'fizformoperators/cosine.cpp' || echo '$(srcdir)/'`fizformoperators/cosine.cpp

cosine.obj: fizformoperators/cosine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cosine.obj -MD -MP -MF "$(DEPDIR)/cosine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cosine.obj `if test -f 'fizformoperators/cosine.cpp'; then $(CYGPATH_W) 'fizformoperators/cosine.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/cosine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cosine.Tpo" "$(DEPDIR)/cosine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cosine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cosine.cpp' object='cosine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cosine.Po' tmpdepfile='$(DEPDIR)/cosine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cosine.obj `if test -f 'fizformoperators/cosine.cpp'; then $(CYGPATH_W) 'fizformoperators/cosine.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/cosine.cpp'; fi`

cosine.lo: fizformoperators/cosine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cosine.lo -MD -MP -MF "$(DEPDIR)/cosine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cosine.lo `test -f 'fizformoperators/cosine.cpp' || echo '$(srcdir)/'`fizformoperators/cosine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cosine.Tpo" "$(DEPDIR)/cosine.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cosine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cosine.cpp' object='cosine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cosine.Plo' tmpdepfile='$(DEPDIR)/cosine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cosine.lo `test -f 'fizformoperators/cosine.cpp' || echo '$(srcdir)/'`fizformoperators/cosine.cpp

difference.o: fizformoperators/difference.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT difference.o -MD -MP -MF "$(DEPDIR)/difference.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o difference.o `test -f 'fizformoperators/difference.cpp' || echo '$(srcdir)/'`fizformoperators/difference.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/difference.Tpo" "$(DEPDIR)/difference.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/difference.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/difference.cpp' object='difference.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/difference.Po' tmpdepfile='$(DEPDIR)/difference.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o difference.o `test -f 'fizformoperators/difference.cpp' || echo '$(srcdir)/'`fizformoperators/difference.cpp

difference.obj: fizformoperators/difference.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT difference.obj -MD -MP -MF "$(DEPDIR)/difference.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o difference.obj `if test -f 'fizformoperators/difference.cpp'; then $(CYGPATH_W) 'fizformoperators/difference.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/difference.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/difference.Tpo" "$(DEPDIR)/difference.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/difference.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/difference.cpp' object='difference.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/difference.Po' tmpdepfile='$(DEPDIR)/difference.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o difference.obj `if test -f 'fizformoperators/difference.cpp'; then $(CYGPATH_W) 'fizformoperators/difference.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/difference.cpp'; fi`

difference.lo: fizformoperators/difference.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT difference.lo -MD -MP -MF "$(DEPDIR)/difference.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o difference.lo `test -f 'fizformoperators/difference.cpp' || echo '$(srcdir)/'`fizformoperators/difference.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/difference.Tpo" "$(DEPDIR)/difference.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/difference.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/difference.cpp' object='difference.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/difference.Plo' tmpdepfile='$(DEPDIR)/difference.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o difference.lo `test -f 'fizformoperators/difference.cpp' || echo '$(srcdir)/'`fizformoperators/difference.cpp

exponent.o: fizformoperators/exponent.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exponent.o -MD -MP -MF "$(DEPDIR)/exponent.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exponent.o `test -f 'fizformoperators/exponent.cpp' || echo '$(srcdir)/'`fizformoperators/exponent.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/exponent.Tpo" "$(DEPDIR)/exponent.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exponent.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/exponent.cpp' object='exponent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exponent.Po' tmpdepfile='$(DEPDIR)/exponent.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exponent.o `test -f 'fizformoperators/exponent.cpp' || echo '$(srcdir)/'`fizformoperators/exponent.cpp

exponent.obj: fizformoperators/exponent.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exponent.obj -MD -MP -MF "$(DEPDIR)/exponent.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exponent.obj `if test -f 'fizformoperators/exponent.cpp'; then $(CYGPATH_W) 'fizformoperators/exponent.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/exponent.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/exponent.Tpo" "$(DEPDIR)/exponent.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exponent.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/exponent.cpp' object='exponent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exponent.Po' tmpdepfile='$(DEPDIR)/exponent.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exponent.obj `if test -f 'fizformoperators/exponent.cpp'; then $(CYGPATH_W) 'fizformoperators/exponent.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/exponent.cpp'; fi`

exponent.lo: fizformoperators/exponent.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exponent.lo -MD -MP -MF "$(DEPDIR)/exponent.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exponent.lo `test -f 'fizformoperators/exponent.cpp' || echo '$(srcdir)/'`fizformoperators/exponent.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/exponent.Tpo" "$(DEPDIR)/exponent.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exponent.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/exponent.cpp' object='exponent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exponent.Plo' tmpdepfile='$(DEPDIR)/exponent.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exponent.lo `test -f 'fizformoperators/exponent.cpp' || echo '$(srcdir)/'`fizformoperators/exponent.cpp

factorial.o: fizformoperators/factorial.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT factorial.o -MD -MP -MF "$(DEPDIR)/factorial.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o factorial.o `test -f 'fizformoperators/factorial.cpp' || echo '$(srcdir)/'`fizformoperators/factorial.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/factorial.Tpo" "$(DEPDIR)/factorial.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/factorial.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/factorial.cpp' object='factorial.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/factorial.Po' tmpdepfile='$(DEPDIR)/factorial.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o factorial.o `test -f 'fizformoperators/factorial.cpp' || echo '$(srcdir)/'`fizformoperators/factorial.cpp

factorial.obj: fizformoperators/factorial.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT factorial.obj -MD -MP -MF "$(DEPDIR)/factorial.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o factorial.obj `if test -f 'fizformoperators/factorial.cpp'; then $(CYGPATH_W) 'fizformoperators/factorial.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/factorial.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/factorial.Tpo" "$(DEPDIR)/factorial.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/factorial.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/factorial.cpp' object='factorial.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/factorial.Po' tmpdepfile='$(DEPDIR)/factorial.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o factorial.obj `if test -f 'fizformoperators/factorial.cpp'; then $(CYGPATH_W) 'fizformoperators/factorial.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/factorial.cpp'; fi`

factorial.lo: fizformoperators/factorial.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT factorial.lo -MD -MP -MF "$(DEPDIR)/factorial.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o factorial.lo `test -f 'fizformoperators/factorial.cpp' || echo '$(srcdir)/'`fizformoperators/factorial.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/factorial.Tpo" "$(DEPDIR)/factorial.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/factorial.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/factorial.cpp' object='factorial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/factorial.Plo' tmpdepfile='$(DEPDIR)/factorial.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o factorial.lo `test -f 'fizformoperators/factorial.cpp' || echo '$(srcdir)/'`fizformoperators/factorial.cpp

magnitude.o: fizformoperators/magnitude.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT magnitude.o -MD -MP -MF "$(DEPDIR)/magnitude.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o magnitude.o `test -f 'fizformoperators/magnitude.cpp' || echo '$(srcdir)/'`fizformoperators/magnitude.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/magnitude.Tpo" "$(DEPDIR)/magnitude.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/magnitude.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/magnitude.cpp' object='magnitude.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/magnitude.Po' tmpdepfile='$(DEPDIR)/magnitude.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o magnitude.o `test -f 'fizformoperators/magnitude.cpp' || echo '$(srcdir)/'`fizformoperators/magnitude.cpp

magnitude.obj: fizformoperators/magnitude.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT magnitude.obj -MD -MP -MF "$(DEPDIR)/magnitude.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o magnitude.obj `if test -f 'fizformoperators/magnitude.cpp'; then $(CYGPATH_W) 'fizformoperators/magnitude.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/magnitude.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/magnitude.Tpo" "$(DEPDIR)/magnitude.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/magnitude.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/magnitude.cpp' object='magnitude.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/magnitude.Po' tmpdepfile='$(DEPDIR)/magnitude.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o magnitude.obj `if test -f 'fizformoperators/magnitude.cpp'; then $(CYGPATH_W) 'fizformoperators/magnitude.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/magnitude.cpp'; fi`

magnitude.lo: fizformoperators/magnitude.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT magnitude.lo -MD -MP -MF "$(DEPDIR)/magnitude.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o magnitude.lo `test -f 'fizformoperators/magnitude.cpp' || echo '$(srcdir)/'`fizformoperators/magnitude.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/magnitude.Tpo" "$(DEPDIR)/magnitude.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/magnitude.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/magnitude.cpp' object='magnitude.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/magnitude.Plo' tmpdepfile='$(DEPDIR)/magnitude.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o magnitude.lo `test -f 'fizformoperators/magnitude.cpp' || echo '$(srcdir)/'`fizformoperators/magnitude.cpp

roduct.o: pfizformoperators/roduct.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT roduct.o -MD -MP -MF "$(DEPDIR)/roduct.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o roduct.o `test -f 'pfizformoperators/roduct.cpp' || echo '$(srcdir)/'`pfizformoperators/roduct.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/roduct.Tpo" "$(DEPDIR)/roduct.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/roduct.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pfizformoperators/roduct.cpp' object='roduct.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/roduct.Po' tmpdepfile='$(DEPDIR)/roduct.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o roduct.o `test -f 'pfizformoperators/roduct.cpp' || echo '$(srcdir)/'`pfizformoperators/roduct.cpp

roduct.obj: pfizformoperators/roduct.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT roduct.obj -MD -MP -MF "$(DEPDIR)/roduct.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o roduct.obj `if test -f 'pfizformoperators/roduct.cpp'; then $(CYGPATH_W) 'pfizformoperators/roduct.cpp'; else $(CYGPATH_W) '$(srcdir)/pfizformoperators/roduct.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/roduct.Tpo" "$(DEPDIR)/roduct.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/roduct.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pfizformoperators/roduct.cpp' object='roduct.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/roduct.Po' tmpdepfile='$(DEPDIR)/roduct.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o roduct.obj `if test -f 'pfizformoperators/roduct.cpp'; then $(CYGPATH_W) 'pfizformoperators/roduct.cpp'; else $(CYGPATH_W) '$(srcdir)/pfizformoperators/roduct.cpp'; fi`

roduct.lo: pfizformoperators/roduct.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT roduct.lo -MD -MP -MF "$(DEPDIR)/roduct.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o roduct.lo `test -f 'pfizformoperators/roduct.cpp' || echo '$(srcdir)/'`pfizformoperators/roduct.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/roduct.Tpo" "$(DEPDIR)/roduct.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/roduct.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pfizformoperators/roduct.cpp' object='roduct.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/roduct.Plo' tmpdepfile='$(DEPDIR)/roduct.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o roduct.lo `test -f 'pfizformoperators/roduct.cpp' || echo '$(srcdir)/'`pfizformoperators/roduct.cpp

random.o: fizformoperators/random.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.o -MD -MP -MF "$(DEPDIR)/random.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o random.o `test -f 'fizformoperators/random.cpp' || echo '$(srcdir)/'`fizformoperators/random.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/random.Tpo" "$(DEPDIR)/random.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/random.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/random.cpp' object='random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/random.Po' tmpdepfile='$(DEPDIR)/random.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.o `test -f 'fizformoperators/random.cpp' || echo '$(srcdir)/'`fizformoperators/random.cpp

random.obj: fizformoperators/random.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.obj -MD -MP -MF "$(DEPDIR)/random.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o random.obj `if test -f 'fizformoperators/random.cpp'; then $(CYGPATH_W) 'fizformoperators/random.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/random.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/random.Tpo" "$(DEPDIR)/random.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/random.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/random.cpp' object='random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/random.Po' tmpdepfile='$(DEPDIR)/random.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.obj `if test -f 'fizformoperators/random.cpp'; then $(CYGPATH_W) 'fizformoperators/random.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/random.cpp'; fi`

random.lo: fizformoperators/random.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.lo -MD -MP -MF "$(DEPDIR)/random.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o random.lo `test -f 'fizformoperators/random.cpp' || echo '$(srcdir)/'`fizformoperators/random.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/random.Tpo" "$(DEPDIR)/random.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/random.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/random.cpp' object='random.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/random.Plo' tmpdepfile='$(DEPDIR)/random.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.lo `test -f 'fizformoperators/random.cpp' || echo '$(srcdir)/'`fizformoperators/random.cpp

sinh.o: fizformoperators/sinh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sinh.o -MD -MP -MF "$(DEPDIR)/sinh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sinh.o `test -f 'fizformoperators/sinh.cpp' || echo '$(srcdir)/'`fizformoperators/sinh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sinh.Tpo" "$(DEPDIR)/sinh.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sinh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sinh.cpp' object='sinh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sinh.Po' tmpdepfile='$(DEPDIR)/sinh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sinh.o `test -f 'fizformoperators/sinh.cpp' || echo '$(srcdir)/'`fizformoperators/sinh.cpp

sinh.obj: fizformoperators/sinh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sinh.obj -MD -MP -MF "$(DEPDIR)/sinh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sinh.obj `if test -f 'fizformoperators/sinh.cpp'; then $(CYGPATH_W) 'fizformoperators/sinh.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/sinh.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sinh.Tpo" "$(DEPDIR)/sinh.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sinh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sinh.cpp' object='sinh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sinh.Po' tmpdepfile='$(DEPDIR)/sinh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sinh.obj `if test -f 'fizformoperators/sinh.cpp'; then $(CYGPATH_W) 'fizformoperators/sinh.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/sinh.cpp'; fi`

sinh.lo: fizformoperators/sinh.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sinh.lo -MD -MP -MF "$(DEPDIR)/sinh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sinh.lo `test -f 'fizformoperators/sinh.cpp' || echo '$(srcdir)/'`fizformoperators/sinh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sinh.Tpo" "$(DEPDIR)/sinh.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sinh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sinh.cpp' object='sinh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sinh.Plo' tmpdepfile='$(DEPDIR)/sinh.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sinh.lo `test -f 'fizformoperators/sinh.cpp' || echo '$(srcdir)/'`fizformoperators/sinh.cpp

sum.o: fizformoperators/sum.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sum.o -MD -MP -MF "$(DEPDIR)/sum.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sum.o `test -f 'fizformoperators/sum.cpp' || echo '$(srcdir)/'`fizformoperators/sum.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sum.Tpo" "$(DEPDIR)/sum.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sum.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sum.cpp' object='sum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sum.Po' tmpdepfile='$(DEPDIR)/sum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sum.o `test -f 'fizformoperators/sum.cpp' || echo '$(srcdir)/'`fizformoperators/sum.cpp

sum.obj: fizformoperators/sum.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sum.obj -MD -MP -MF "$(DEPDIR)/sum.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sum.obj `if test -f 'fizformoperators/sum.cpp'; then $(CYGPATH_W) 'fizformoperators/sum.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/sum.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sum.Tpo" "$(DEPDIR)/sum.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sum.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sum.cpp' object='sum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sum.Po' tmpdepfile='$(DEPDIR)/sum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sum.obj `if test -f 'fizformoperators/sum.cpp'; then $(CYGPATH_W) 'fizformoperators/sum.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/sum.cpp'; fi`

sum.lo: fizformoperators/sum.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sum.lo -MD -MP -MF "$(DEPDIR)/sum.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sum.lo `test -f 'fizformoperators/sum.cpp' || echo '$(srcdir)/'`fizformoperators/sum.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sum.Tpo" "$(DEPDIR)/sum.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sum.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sum.cpp' object='sum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sum.Plo' tmpdepfile='$(DEPDIR)/sum.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sum.lo `test -f 'fizformoperators/sum.cpp' || echo '$(srcdir)/'`fizformoperators/sum.cpp

tanh.o: fizformoperators/tanh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tanh.o -MD -MP -MF "$(DEPDIR)/tanh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tanh.o `test -f 'fizformoperators/tanh.cpp' || echo '$(srcdir)/'`fizformoperators/tanh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tanh.Tpo" "$(DEPDIR)/tanh.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tanh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/tanh.cpp' object='tanh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tanh.Po' tmpdepfile='$(DEPDIR)/tanh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tanh.o `test -f 'fizformoperators/tanh.cpp' || echo '$(srcdir)/'`fizformoperators/tanh.cpp

tanh.obj: fizformoperators/tanh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tanh.obj -MD -MP -MF "$(DEPDIR)/tanh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tanh.obj `if test -f 'fizformoperators/tanh.cpp'; then $(CYGPATH_W) 'fizformoperators/tanh.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/tanh.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tanh.Tpo" "$(DEPDIR)/tanh.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tanh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/tanh.cpp' object='tanh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tanh.Po' tmpdepfile='$(DEPDIR)/tanh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tanh.obj `if test -f 'fizformoperators/tanh.cpp'; then $(CYGPATH_W) 'fizformoperators/tanh.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/tanh.cpp'; fi`

tanh.lo: fizformoperators/tanh.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tanh.lo -MD -MP -MF "$(DEPDIR)/tanh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tanh.lo `test -f 'fizformoperators/tanh.cpp' || echo '$(srcdir)/'`fizformoperators/tanh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tanh.Tpo" "$(DEPDIR)/tanh.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tanh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/tanh.cpp' object='tanh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tanh.Plo' tmpdepfile='$(DEPDIR)/tanh.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tanh.lo `test -f 'fizformoperators/tanh.cpp' || echo '$(srcdir)/'`fizformoperators/tanh.cpp

vectorize.o: fizformoperators/vectorize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vectorize.o -MD -MP -MF "$(DEPDIR)/vectorize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o vectorize.o `test -f 'fizformoperators/vectorize.cpp' || echo '$(srcdir)/'`fizformoperators/vectorize.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/vectorize.Tpo" "$(DEPDIR)/vectorize.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/vectorize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/vectorize.cpp' object='vectorize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/vectorize.Po' tmpdepfile='$(DEPDIR)/vectorize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vectorize.o `test -f 'fizformoperators/vectorize.cpp' || echo '$(srcdir)/'`fizformoperators/vectorize.cpp

vectorize.obj: fizformoperators/vectorize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vectorize.obj -MD -MP -MF "$(DEPDIR)/vectorize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o vectorize.obj `if test -f 'fizformoperators/vectorize.cpp'; then $(CYGPATH_W) 'fizformoperators/vectorize.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/vectorize.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/vectorize.Tpo" "$(DEPDIR)/vectorize.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/vectorize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/vectorize.cpp' object='vectorize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/vectorize.Po' tmpdepfile='$(DEPDIR)/vectorize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vectorize.obj `if test -f 'fizformoperators/vectorize.cpp'; then $(CYGPATH_W) 'fizformoperators/vectorize.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/vectorize.cpp'; fi`

vectorize.lo: fizformoperators/vectorize.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vectorize.lo -MD -MP -MF "$(DEPDIR)/vectorize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o vectorize.lo `test -f 'fizformoperators/vectorize.cpp' || echo '$(srcdir)/'`fizformoperators/vectorize.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/vectorize.Tpo" "$(DEPDIR)/vectorize.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/vectorize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/vectorize.cpp' object='vectorize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/vectorize.Plo' tmpdepfile='$(DEPDIR)/vectorize.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vectorize.lo `test -f 'fizformoperators/vectorize.cpp' || echo '$(srcdir)/'`fizformoperators/vectorize.cpp

arcsin.o: fizformoperators/arcsin.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arcsin.o -MD -MP -MF "$(DEPDIR)/arcsin.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arcsin.o `test -f 'fizformoperators/arcsin.cpp' || echo '$(srcdir)/'`fizformoperators/arcsin.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arcsin.Tpo" "$(DEPDIR)/arcsin.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arcsin.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arcsin.cpp' object='arcsin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arcsin.Po' tmpdepfile='$(DEPDIR)/arcsin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arcsin.o `test -f 'fizformoperators/arcsin.cpp' || echo '$(srcdir)/'`fizformoperators/arcsin.cpp

arcsin.obj: fizformoperators/arcsin.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arcsin.obj -MD -MP -MF "$(DEPDIR)/arcsin.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arcsin.obj `if test -f 'fizformoperators/arcsin.cpp'; then $(CYGPATH_W) 'fizformoperators/arcsin.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/arcsin.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arcsin.Tpo" "$(DEPDIR)/arcsin.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arcsin.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arcsin.cpp' object='arcsin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arcsin.Po' tmpdepfile='$(DEPDIR)/arcsin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arcsin.obj `if test -f 'fizformoperators/arcsin.cpp'; then $(CYGPATH_W) 'fizformoperators/arcsin.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/arcsin.cpp'; fi`

arcsin.lo: fizformoperators/arcsin.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arcsin.lo -MD -MP -MF "$(DEPDIR)/arcsin.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o arcsin.lo `test -f 'fizformoperators/arcsin.cpp' || echo '$(srcdir)/'`fizformoperators/arcsin.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/arcsin.Tpo" "$(DEPDIR)/arcsin.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/arcsin.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/arcsin.cpp' object='arcsin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/arcsin.Plo' tmpdepfile='$(DEPDIR)/arcsin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arcsin.lo `test -f 'fizformoperators/arcsin.cpp' || echo '$(srcdir)/'`fizformoperators/arcsin.cpp

cosh.o: fizformoperators/cosh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cosh.o -MD -MP -MF "$(DEPDIR)/cosh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cosh.o `test -f 'fizformoperators/cosh.cpp' || echo '$(srcdir)/'`fizformoperators/cosh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cosh.Tpo" "$(DEPDIR)/cosh.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cosh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cosh.cpp' object='cosh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cosh.Po' tmpdepfile='$(DEPDIR)/cosh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cosh.o `test -f 'fizformoperators/cosh.cpp' || echo '$(srcdir)/'`fizformoperators/cosh.cpp

cosh.obj: fizformoperators/cosh.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cosh.obj -MD -MP -MF "$(DEPDIR)/cosh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cosh.obj `if test -f 'fizformoperators/cosh.cpp'; then $(CYGPATH_W) 'fizformoperators/cosh.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/cosh.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cosh.Tpo" "$(DEPDIR)/cosh.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cosh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cosh.cpp' object='cosh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cosh.Po' tmpdepfile='$(DEPDIR)/cosh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cosh.obj `if test -f 'fizformoperators/cosh.cpp'; then $(CYGPATH_W) 'fizformoperators/cosh.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/cosh.cpp'; fi`

cosh.lo: fizformoperators/cosh.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cosh.lo -MD -MP -MF "$(DEPDIR)/cosh.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cosh.lo `test -f 'fizformoperators/cosh.cpp' || echo '$(srcdir)/'`fizformoperators/cosh.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cosh.Tpo" "$(DEPDIR)/cosh.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cosh.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cosh.cpp' object='cosh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cosh.Plo' tmpdepfile='$(DEPDIR)/cosh.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cosh.lo `test -f 'fizformoperators/cosh.cpp' || echo '$(srcdir)/'`fizformoperators/cosh.cpp

cross.o: fizformoperators/cross.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cross.o -MD -MP -MF "$(DEPDIR)/cross.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cross.o `test -f 'fizformoperators/cross.cpp' || echo '$(srcdir)/'`fizformoperators/cross.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cross.Tpo" "$(DEPDIR)/cross.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cross.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cross.cpp' object='cross.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cross.Po' tmpdepfile='$(DEPDIR)/cross.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cross.o `test -f 'fizformoperators/cross.cpp' || echo '$(srcdir)/'`fizformoperators/cross.cpp

cross.obj: fizformoperators/cross.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cross.obj -MD -MP -MF "$(DEPDIR)/cross.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cross.obj `if test -f 'fizformoperators/cross.cpp'; then $(CYGPATH_W) 'fizformoperators/cross.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/cross.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cross.Tpo" "$(DEPDIR)/cross.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cross.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cross.cpp' object='cross.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cross.Po' tmpdepfile='$(DEPDIR)/cross.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cross.obj `if test -f 'fizformoperators/cross.cpp'; then $(CYGPATH_W) 'fizformoperators/cross.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/cross.cpp'; fi`

cross.lo: fizformoperators/cross.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cross.lo -MD -MP -MF "$(DEPDIR)/cross.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cross.lo `test -f 'fizformoperators/cross.cpp' || echo '$(srcdir)/'`fizformoperators/cross.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cross.Tpo" "$(DEPDIR)/cross.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cross.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/cross.cpp' object='cross.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cross.Plo' tmpdepfile='$(DEPDIR)/cross.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cross.lo `test -f 'fizformoperators/cross.cpp' || echo '$(srcdir)/'`fizformoperators/cross.cpp

dot.o: fizformoperators/dot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dot.o -MD -MP -MF "$(DEPDIR)/dot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dot.o `test -f 'fizformoperators/dot.cpp' || echo '$(srcdir)/'`fizformoperators/dot.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dot.Tpo" "$(DEPDIR)/dot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/dot.cpp' object='dot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dot.Po' tmpdepfile='$(DEPDIR)/dot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dot.o `test -f 'fizformoperators/dot.cpp' || echo '$(srcdir)/'`fizformoperators/dot.cpp

dot.obj: fizformoperators/dot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dot.obj -MD -MP -MF "$(DEPDIR)/dot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dot.obj `if test -f 'fizformoperators/dot.cpp'; then $(CYGPATH_W) 'fizformoperators/dot.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/dot.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dot.Tpo" "$(DEPDIR)/dot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/dot.cpp' object='dot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dot.Po' tmpdepfile='$(DEPDIR)/dot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dot.obj `if test -f 'fizformoperators/dot.cpp'; then $(CYGPATH_W) 'fizformoperators/dot.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/dot.cpp'; fi`

dot.lo: fizformoperators/dot.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dot.lo -MD -MP -MF "$(DEPDIR)/dot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dot.lo `test -f 'fizformoperators/dot.cpp' || echo '$(srcdir)/'`fizformoperators/dot.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/dot.Tpo" "$(DEPDIR)/dot.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/dot.cpp' object='dot.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dot.Plo' tmpdepfile='$(DEPDIR)/dot.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dot.lo `test -f 'fizformoperators/dot.cpp' || echo '$(srcdir)/'`fizformoperators/dot.cpp

exponentiate.o: fizformoperators/exponentiate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exponentiate.o -MD -MP -MF "$(DEPDIR)/exponentiate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exponentiate.o `test -f 'fizformoperators/exponentiate.cpp' || echo '$(srcdir)/'`fizformoperators/exponentiate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/exponentiate.Tpo" "$(DEPDIR)/exponentiate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exponentiate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/exponentiate.cpp' object='exponentiate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exponentiate.Po' tmpdepfile='$(DEPDIR)/exponentiate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exponentiate.o `test -f 'fizformoperators/exponentiate.cpp' || echo '$(srcdir)/'`fizformoperators/exponentiate.cpp

exponentiate.obj: fizformoperators/exponentiate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exponentiate.obj -MD -MP -MF "$(DEPDIR)/exponentiate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exponentiate.obj `if test -f 'fizformoperators/exponentiate.cpp'; then $(CYGPATH_W) 'fizformoperators/exponentiate.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/exponentiate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/exponentiate.Tpo" "$(DEPDIR)/exponentiate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exponentiate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/exponentiate.cpp' object='exponentiate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exponentiate.Po' tmpdepfile='$(DEPDIR)/exponentiate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exponentiate.obj `if test -f 'fizformoperators/exponentiate.cpp'; then $(CYGPATH_W) 'fizformoperators/exponentiate.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/exponentiate.cpp'; fi`

exponentiate.lo: fizformoperators/exponentiate.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exponentiate.lo -MD -MP -MF "$(DEPDIR)/exponentiate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exponentiate.lo `test -f 'fizformoperators/exponentiate.cpp' || echo '$(srcdir)/'`fizformoperators/exponentiate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/exponentiate.Tpo" "$(DEPDIR)/exponentiate.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exponentiate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/exponentiate.cpp' object='exponentiate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exponentiate.Plo' tmpdepfile='$(DEPDIR)/exponentiate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exponentiate.lo `test -f 'fizformoperators/exponentiate.cpp' || echo '$(srcdir)/'`fizformoperators/exponentiate.cpp

logarithm.o: fizformoperators/logarithm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logarithm.o -MD -MP -MF "$(DEPDIR)/logarithm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o logarithm.o `test -f 'fizformoperators/logarithm.cpp' || echo '$(srcdir)/'`fizformoperators/logarithm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/logarithm.Tpo" "$(DEPDIR)/logarithm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/logarithm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/logarithm.cpp' object='logarithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/logarithm.Po' tmpdepfile='$(DEPDIR)/logarithm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logarithm.o `test -f 'fizformoperators/logarithm.cpp' || echo '$(srcdir)/'`fizformoperators/logarithm.cpp

logarithm.obj: fizformoperators/logarithm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logarithm.obj -MD -MP -MF "$(DEPDIR)/logarithm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o logarithm.obj `if test -f 'fizformoperators/logarithm.cpp'; then $(CYGPATH_W) 'fizformoperators/logarithm.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/logarithm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/logarithm.Tpo" "$(DEPDIR)/logarithm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/logarithm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/logarithm.cpp' object='logarithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/logarithm.Po' tmpdepfile='$(DEPDIR)/logarithm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logarithm.obj `if test -f 'fizformoperators/logarithm.cpp'; then $(CYGPATH_W) 'fizformoperators/logarithm.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/logarithm.cpp'; fi`

logarithm.lo: fizformoperators/logarithm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logarithm.lo -MD -MP -MF "$(DEPDIR)/logarithm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o logarithm.lo `test -f 'fizformoperators/logarithm.cpp' || echo '$(srcdir)/'`fizformoperators/logarithm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/logarithm.Tpo" "$(DEPDIR)/logarithm.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/logarithm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/logarithm.cpp' object='logarithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/logarithm.Plo' tmpdepfile='$(DEPDIR)/logarithm.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logarithm.lo `test -f 'fizformoperators/logarithm.cpp' || echo '$(srcdir)/'`fizformoperators/logarithm.cpp

quotient.o: fizformoperators/quotient.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quotient.o -MD -MP -MF "$(DEPDIR)/quotient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o quotient.o `test -f 'fizformoperators/quotient.cpp' || echo '$(srcdir)/'`fizformoperators/quotient.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/quotient.Tpo" "$(DEPDIR)/quotient.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/quotient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/quotient.cpp' object='quotient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/quotient.Po' tmpdepfile='$(DEPDIR)/quotient.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quotient.o `test -f 'fizformoperators/quotient.cpp' || echo '$(srcdir)/'`fizformoperators/quotient.cpp

quotient.obj: fizformoperators/quotient.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quotient.obj -MD -MP -MF "$(DEPDIR)/quotient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o quotient.obj `if test -f 'fizformoperators/quotient.cpp'; then $(CYGPATH_W) 'fizformoperators/quotient.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/quotient.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/quotient.Tpo" "$(DEPDIR)/quotient.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/quotient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/quotient.cpp' object='quotient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/quotient.Po' tmpdepfile='$(DEPDIR)/quotient.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quotient.obj `if test -f 'fizformoperators/quotient.cpp'; then $(CYGPATH_W) 'fizformoperators/quotient.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/quotient.cpp'; fi`

quotient.lo: fizformoperators/quotient.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quotient.lo -MD -MP -MF "$(DEPDIR)/quotient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o quotient.lo `test -f 'fizformoperators/quotient.cpp' || echo '$(srcdir)/'`fizformoperators/quotient.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/quotient.Tpo" "$(DEPDIR)/quotient.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/quotient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/quotient.cpp' object='quotient.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/quotient.Plo' tmpdepfile='$(DEPDIR)/quotient.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quotient.lo `test -f 'fizformoperators/quotient.cpp' || echo '$(srcdir)/'`fizformoperators/quotient.cpp

sine.o: fizformoperators/sine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sine.o -MD -MP -MF "$(DEPDIR)/sine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sine.o `test -f 'fizformoperators/sine.cpp' || echo '$(srcdir)/'`fizformoperators/sine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sine.Tpo" "$(DEPDIR)/sine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sine.cpp' object='sine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sine.Po' tmpdepfile='$(DEPDIR)/sine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sine.o `test -f 'fizformoperators/sine.cpp' || echo '$(srcdir)/'`fizformoperators/sine.cpp

sine.obj: fizformoperators/sine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sine.obj -MD -MP -MF "$(DEPDIR)/sine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sine.obj `if test -f 'fizformoperators/sine.cpp'; then $(CYGPATH_W) 'fizformoperators/sine.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/sine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sine.Tpo" "$(DEPDIR)/sine.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sine.cpp' object='sine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sine.Po' tmpdepfile='$(DEPDIR)/sine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sine.obj `if test -f 'fizformoperators/sine.cpp'; then $(CYGPATH_W) 'fizformoperators/sine.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/sine.cpp'; fi`

sine.lo: fizformoperators/sine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sine.lo -MD -MP -MF "$(DEPDIR)/sine.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sine.lo `test -f 'fizformoperators/sine.cpp' || echo '$(srcdir)/'`fizformoperators/sine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/sine.Tpo" "$(DEPDIR)/sine.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sine.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/sine.cpp' object='sine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sine.Plo' tmpdepfile='$(DEPDIR)/sine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sine.lo `test -f 'fizformoperators/sine.cpp' || echo '$(srcdir)/'`fizformoperators/sine.cpp

square.o: fizformoperators/square.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT square.o -MD -MP -MF "$(DEPDIR)/square.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o square.o `test -f 'fizformoperators/square.cpp' || echo '$(srcdir)/'`fizformoperators/square.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/square.Tpo" "$(DEPDIR)/square.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/square.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/square.cpp' object='square.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/square.Po' tmpdepfile='$(DEPDIR)/square.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o square.o `test -f 'fizformoperators/square.cpp' || echo '$(srcdir)/'`fizformoperators/square.cpp

square.obj: fizformoperators/square.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT square.obj -MD -MP -MF "$(DEPDIR)/square.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o square.obj `if test -f 'fizformoperators/square.cpp'; then $(CYGPATH_W) 'fizformoperators/square.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/square.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/square.Tpo" "$(DEPDIR)/square.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/square.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/square.cpp' object='square.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/square.Po' tmpdepfile='$(DEPDIR)/square.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o square.obj `if test -f 'fizformoperators/square.cpp'; then $(CYGPATH_W) 'fizformoperators/square.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/square.cpp'; fi`

square.lo: fizformoperators/square.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT square.lo -MD -MP -MF "$(DEPDIR)/square.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o square.lo `test -f 'fizformoperators/square.cpp' || echo '$(srcdir)/'`fizformoperators/square.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/square.Tpo" "$(DEPDIR)/square.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/square.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/square.cpp' object='square.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/square.Plo' tmpdepfile='$(DEPDIR)/square.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o square.lo `test -f 'fizformoperators/square.cpp' || echo '$(srcdir)/'`fizformoperators/square.cpp

tangent.o: fizformoperators/tangent.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tangent.o -MD -MP -MF "$(DEPDIR)/tangent.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tangent.o `test -f 'fizformoperators/tangent.cpp' || echo '$(srcdir)/'`fizformoperators/tangent.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tangent.Tpo" "$(DEPDIR)/tangent.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tangent.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/tangent.cpp' object='tangent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tangent.Po' tmpdepfile='$(DEPDIR)/tangent.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tangent.o `test -f 'fizformoperators/tangent.cpp' || echo '$(srcdir)/'`fizformoperators/tangent.cpp

tangent.obj: fizformoperators/tangent.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tangent.obj -MD -MP -MF "$(DEPDIR)/tangent.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tangent.obj `if test -f 'fizformoperators/tangent.cpp'; then $(CYGPATH_W) 'fizformoperators/tangent.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/tangent.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tangent.Tpo" "$(DEPDIR)/tangent.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tangent.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/tangent.cpp' object='tangent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tangent.Po' tmpdepfile='$(DEPDIR)/tangent.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tangent.obj `if test -f 'fizformoperators/tangent.cpp'; then $(CYGPATH_W) 'fizformoperators/tangent.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/tangent.cpp'; fi`

tangent.lo: fizformoperators/tangent.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tangent.lo -MD -MP -MF "$(DEPDIR)/tangent.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tangent.lo `test -f 'fizformoperators/tangent.cpp' || echo '$(srcdir)/'`fizformoperators/tangent.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/tangent.Tpo" "$(DEPDIR)/tangent.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tangent.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/tangent.cpp' object='tangent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tangent.Plo' tmpdepfile='$(DEPDIR)/tangent.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tangent.lo `test -f 'fizformoperators/tangent.cpp' || echo '$(srcdir)/'`fizformoperators/tangent.cpp

template.o: fizformoperators/template.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT template.o -MD -MP -MF "$(DEPDIR)/template.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o template.o `test -f 'fizformoperators/template.cpp' || echo '$(srcdir)/'`fizformoperators/template.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/template.Tpo" "$(DEPDIR)/template.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/template.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/template.cpp' object='template.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/template.Po' tmpdepfile='$(DEPDIR)/template.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o template.o `test -f 'fizformoperators/template.cpp' || echo '$(srcdir)/'`fizformoperators/template.cpp

template.obj: fizformoperators/template.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT template.obj -MD -MP -MF "$(DEPDIR)/template.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o template.obj `if test -f 'fizformoperators/template.cpp'; then $(CYGPATH_W) 'fizformoperators/template.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/template.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/template.Tpo" "$(DEPDIR)/template.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/template.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/template.cpp' object='template.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/template.Po' tmpdepfile='$(DEPDIR)/template.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o template.obj `if test -f 'fizformoperators/template.cpp'; then $(CYGPATH_W) 'fizformoperators/template.cpp'; else $(CYGPATH_W) '$(srcdir)/fizformoperators/template.cpp'; fi`

template.lo: fizformoperators/template.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT template.lo -MD -MP -MF "$(DEPDIR)/template.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o template.lo `test -f 'fizformoperators/template.cpp' || echo '$(srcdir)/'`fizformoperators/template.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/template.Tpo" "$(DEPDIR)/template.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/template.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fizformoperators/template.cpp' object='template.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/template.Plo' tmpdepfile='$(DEPDIR)/template.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o template.lo `test -f 'fizformoperators/template.cpp' || echo '$(srcdir)/'`fizformoperators/template.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
